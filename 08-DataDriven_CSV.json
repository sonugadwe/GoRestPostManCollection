{
	"info": {
		"_postman_id": "72b41f83-eb08-4aa1-ad8b-7d3df8efa216",
		"name": "08-DataDriven_CSV",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9116417"
	},
	"item": [
		{
			"name": "CreateUserWithCSVTestdata",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Check user data response\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(pm.iterationData.get(\"name\"));\r",
							"    pm.expect(jsonData.gender).to.eql(pm.iterationData.get(\"gender\"));\r",
							"    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"status\"));\r",
							"\r",
							"    //fetch the email\r",
							"    const rawJsonBody = pm.request.body.raw;  //json body\r",
							"    //json to javascript object\r",
							"    const requestBody = JSON.parse(rawJsonBody);\r",
							"    const email = requestBody.email;\r",
							"    console.log(\"expected email ===>\" + email);\r",
							"    pm.expect(jsonData.email).to.eql(email);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"const userID = response.id;\r",
							"pm.variables.set(\"user_id\", userID);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{tokenId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "//name, gender, status : fetching from csv file : myuser.csv\r\n{\r\n   \"name\": \"{{name}}\",\r\n   \"gender\": \"{{gender}}\",\r\n   \"email\": \"{{$randomEmail}}\",\r\n   \"status\": \"{{status}}\" \r\n}\r\n//csv, json files data files",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/public/v2/users",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"public",
						"v2",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateAUSerByID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Is user status updated\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"newStatus\"));\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{tokenId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"status\" : \"{{newStatus}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/public/v2/users/{{user_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"public",
						"v2",
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		}
	]
}